import * as cg from './types.js';
export declare const invRanks: readonly cg.Rank[];
export declare function allKeys(bd: cg.BoardDimensions): cg.Key[];
export declare function allPos(bd: cg.BoardDimensions): cg.Pos[];
export declare const pos2key: (pos: cg.Pos) => cg.Key;
export declare const key2pos: (k: cg.Key) => cg.Pos;
export declare function roleOf(letter: cg.Letter | cg.DropOrig): cg.Role;
export declare function letterOf(role: cg.Role, uppercase?: boolean): cg.Letter;
export declare function dropOrigOf(role: cg.Role): cg.DropOrig;
export declare function isDropOrig(orig: cg.Orig): orig is cg.DropOrig;
export declare function isKey(selectable: cg.Selectable | cg.Orig): selectable is cg.Key;
export declare function isPiece(selectable: cg.Selectable): selectable is cg.Piece;
export declare function isSame(lhs: cg.Selectable, rhs: cg.Selectable): boolean;
export declare function changeNumber<T>(map: Map<T, number>, key: T, num: number): void;
export declare const uciToMove: (uci: string | undefined) => cg.Key[] | undefined;
export declare function memo<A>(f: () => A): cg.Memo<A>;
export declare const timer: () => cg.Timer;
export declare const opposite: (c: cg.Color) => cg.Color;
export declare const samePiece: (p1: cg.Piece, p2: cg.Piece) => boolean;
export declare const pieceSide: (p: cg.Piece, o: cg.Color) => cg.Side;
export declare const pieceClasses: (p: cg.Piece, o: cg.Color) => string;
export declare const distanceSq: (pos1: cg.Pos, pos2: cg.Pos) => number;
export declare const posToTranslate: (bounds: ClientRect, bd: cg.BoardDimensions) => (pos: cg.Pos, asWhite: boolean) => cg.NumberPair;
export declare const translate: (el: HTMLElement, pos: cg.NumberPair) => void;
export declare const translateAndScale: (el: HTMLElement, pos: cg.NumberPair, scale?: number) => void;
export declare const setVisible: (el: HTMLElement, v: boolean) => void;
export declare const eventPosition: (e: cg.MouchEvent) => cg.NumberPair | undefined;
export declare const isRightButton: (e: cg.MouchEvent) => boolean;
export declare const createEl: (tagName: string, className?: string) => HTMLElement;
export declare const isMiniBoard: (el: HTMLElement) => boolean;
export declare function computeSquareCenter(key: cg.Key, asWhite: boolean, bounds: ClientRect, bd: cg.BoardDimensions): cg.NumberPair;
